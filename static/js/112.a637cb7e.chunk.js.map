{"version":3,"file":"static/js/112.a637cb7e.chunk.js","mappings":"8PAEA,aAAe,OAAf,oBAAe,4FAAkCA,EAAlC,EAAkCA,GAAlC,iEAGUC,EAAAA,EAAAA,IAAA,6CACiBD,EADjB,8CAHV,cAGPE,EAHO,OAMPC,EAAOD,EAASC,KANT,kBAONA,GAPM,kE,4BCATC,EAAcC,EAAAA,GAAAA,IAAH,8JAYXC,EAAcD,EAAAA,GAAAA,IAAH,iICZXE,EAAeF,EAAAA,GAAAA,IAAH,2G,SCCH,SAASG,IACtB,OACE,UAACD,EAAD,YACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAAME,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,SAAT,0BAGJ,SAAC,KAAD,MAGL,C,aCXc,SAASC,IAAiB,IAAD,IACtC,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACMb,GAAKc,EAAAA,EAAAA,MACLC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,YAEpDC,EAAAA,EAAAA,YAAU,WACHrB,GJZM,SAAf,kCIcIsB,CAAiBtB,GAAIuB,MAAK,SAAAC,GACxBX,EAAeW,EAChB,GACF,GAAE,CAACxB,IAEJ,IAAQyB,EAAuDb,EAAvDa,YAAaC,EAA0Cd,EAA1Cc,MAAOC,EAAmCf,EAAnCe,aAAcC,EAAqBhB,EAArBgB,SAAUC,EAAWjB,EAAXiB,OAEpD,OACE,iCACE,SAAC,KAAD,CAAMpB,GAAIQ,EAAaa,QAAvB,UACE,UAAC1B,EAAD,YACE,SAAC,MAAD,KACA,yCAGJ,UAACE,EAAD,WACGmB,IACC,gBACEM,IAAG,8CAAyCN,GAC5CO,IAAI,MACJC,MAAO,OAIX,4BACE,wBAAKP,KACL,yCAAgC,GAAfC,GAAmBO,QAAQ,GAA5C,QACA,sCACA,uBAAIN,KACJ,mCACCC,IACC,uBACGA,EAAOM,KAAI,SAAAC,GACV,MAAM,GAAN,OAAUA,EAAMC,KAAhB,IACD,aAKT,SAAC7B,EAAD,MAGL,C","sources":["utils/GetDetailed.jsx","components/DetailedMovie/DetailedMovie.styled.jsx","components/DetailedMovie/AddInfo/AddInfo.styled.jsx","components/DetailedMovie/AddInfo/AddInfo.jsx","components/DetailedMovie/DetailedMovie.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport default async function getDetailedMovie({ id }) {\n  if (!id) return;\n\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=07952b117bf25f1a5db75594ad56755b`\n  );\n  const data = response.data;\n  return data;\n}\n","import styled from 'styled-components';\n\nconst ToHomeStyle = styled.div`\n  display: flex;\n  align-items: flex-end;\n  padding: 10px;\n  p {\n    margin-left: 10px;\n  }\n  &:hover {\n    color: blue;\n  }\n`;\n\nconst DetailStyle = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n  img {\n    margin-right: 20px;\n    margin-left: 20px;\n  }\n`;\nexport { DetailStyle, ToHomeStyle };\n","import styled from 'styled-components';\n\nconst AddInfoStyle = styled.div`\n  border-top: 1px solid grey;\n  box-shadow: grey 0px -5px 5px;\n  padding: 20px;\n`;\nexport { AddInfoStyle };\n","import { Link, Outlet } from 'react-router-dom';\nimport { AddInfoStyle } from './AddInfo.styled';\n\nexport default function AddInfo() {\n  return (\n    <AddInfoStyle>\n      <p>Additional Information</p>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"review\">Review</Link>\n        </li>\n      </ul>\n      <Outlet />\n    </AddInfoStyle>\n  );\n}\n","import { useEffect, useRef, useState } from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport getDetailedMovie from 'utils/GetDetailed';\nimport { DetailStyle, ToHomeStyle } from './DetailedMovie.styled';\nimport AddInfo from './AddInfo/AddInfo';\nimport { BsBoxArrowLeft } from 'react-icons/bs';\n\nexport default function DetailedMovie() {\n  const [movieDetail, setMovieDetail] = useState([]);\n  const id = useParams();\n  const location = useLocation();\n  const backLocation = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    if (!id) return;\n\n    getDetailedMovie(id).then(movie => {\n      setMovieDetail(movie);\n    });\n  }, [id]);\n\n  const { poster_path, title, vote_average, overview, genres } = movieDetail;\n\n  return (\n    <>\n      <Link to={backLocation.current}>\n        <ToHomeStyle>\n          <BsBoxArrowLeft />\n          <p>Go back</p>\n        </ToHomeStyle>\n      </Link>\n      <DetailStyle>\n        {poster_path && (\n          <img\n            src={`https://image.tmdb.org/t/p/original/${poster_path}`}\n            alt=\"alt\"\n            width={400}\n          />\n        )}\n\n        <div>\n          <h1>{title}</h1>\n          <p>User score: {(vote_average * 10).toFixed(1)}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          {genres && (\n            <p>\n              {genres.map(genre => {\n                return `${genre.name} `;\n              })}\n            </p>\n          )}\n        </div>\n      </DetailStyle>\n      <AddInfo />\n    </>\n  );\n}\n"],"names":["id","axios","response","data","ToHomeStyle","styled","DetailStyle","AddInfoStyle","AddInfo","to","DetailedMovie","useState","movieDetail","setMovieDetail","useParams","location","useLocation","backLocation","useRef","state","from","useEffect","getDetailedMovie","then","movie","poster_path","title","vote_average","overview","genres","current","src","alt","width","toFixed","map","genre","name"],"sourceRoot":""}